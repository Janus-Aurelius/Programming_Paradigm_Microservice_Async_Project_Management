# Docker Compose for MongoDB with Project Management Database
# This file sets up a MongoDB instance with the project management database

version: "3.8"

services:
  mongodb:
    image: mongo:7.0
    container_name: project-management-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: project_management
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongodb-schema.js:/docker-entrypoint-initdb.d/01-schema.js:ro
      - ./sample-data.js:/docker-entrypoint-initdb.d/02-sample-data.js:ro
      - ./init-mongo.js:/docker-entrypoint-initdb.d/00-init.js:ro
    networks:
      - project-management-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/project_management --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongo-express:
    image: mongo-express:1.0.0
    container_name: project-management-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
    networks:
      - project-management-network
    depends_on:
      mongodb:
        condition: service_healthy

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  project-management-network:
    driver: bridge
    name: project-management-network
